package day09;

public class Ex01 {
	// oop : object oriented programming
	
	// 프로그램 내의 모든 사물, 개념, 요소를 객체(object)로 규정하고
	// 객체와 객체의 상호작용에 의해 프로그램이 진행되는 방식으로 작성
	public static void main(String[] args) {
		// 1) 내 프로그램의 주제가 무엇인가?
		
		// 2) 프로그램이 다루어야 할 데이터의 자료형은 어떤 것인가?
		// - 기본 데이터 자료형을 정의하기 위한 클래스 (속성 중심의 클래스) (VO,DTO)
		
		// 3) 프로그램이 갖추어야 할 기능에는 어떤 것들이 있는가?
		// - 프로그램이 가져야 할 기능을 모아둔 클래스 (기능 중심의 클래스) (DAO)

		
	}

}

// 절차지향 : 물이 위에서 아래로 흐르는 것처럼 순차적으로 처리가 중요시 되며 프로그램 전체가 유기적으로 연결되도록 만드는 프로그래밍기법
// 결과값을 반환하지 않음(void)

// 절차지향 장점 : 컴퓨터의 처리구조와 유사해 실행속도가 빠르다
// 절차지향 단점 : 유지보수가 어렵다, 디버깅이 어렵다, 실행순서가 정해져 있어 코드의 순서가 바뀌면 동일한 결과를 보장하기 어렵다